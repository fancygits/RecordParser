/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5/userguide/java_library_plugin.html
 */

plugins {
	id 'java'
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'eclipse'
}

version = '1.0'

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Record Parser',  
        	'Implementation-Version': version,
        	'Main-Class': 'me.jlukejohnson.gr.controller.RecordParserDriver'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.1-jre' 
	
	// https://mvnrepository.com/artifact/com.beust/jcommander
	compile group: 'com.beust', name: 'jcommander', version: '1.72'
    
    // https://mvnrepository.com/artifact/org.apache.spark/spark-core
	compile group: 'org.apache.spark', name: 'spark-core_2.12', version: '2.4.3'
	
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.1'
	
	
	testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.1')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.5.1')
}

test {
	useJUnitPlatform()
}